piVersion: apps/v1
kind: Deployment
metadata:
  name: webapplication
  labels:
    app: webapp
    
spec:
  replicas: 2

  selector:
    matchLabels:
      app: webapp

  template:
    metadata:
      labels:
        app: webapp

    spec:
      containers:
      - name: appContainer

        image: anmar000/fastapi-app:v1  # Replace with your application image

        ports:
        - containerPort: 8080
        #command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]

        volumeMounts:
        # the volume that called app-code on the node will be mounted on the /app of the container
        - name: app-code
          mountPath: /app  # Path inside the container where the code will be mounted


        resources:  # Resource requests and limits for the container.
          requests:
            memory: "64Mi"  # Minimum memory requested for the container.
            cpu: "100m"  # Minimum CPU requested for the container.
          limits:
            memory: "128Mi"  # Maximum memory the container can use.
            cpu: "200m"  # Maximum CPU the container can use.
      

      
      - name: dbCotainer

        image: postgres:latest  # Replace with your application image

        ports:
        - containerPort: 5432

        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_USER

        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_PASSWORD

        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: POSTGRES_DB

        volumeMounts:
        # This means that inside the PostgreSQL container,
        #  the directory /var/lib/postgresql/data will be mounted to the Kubernetes volume named postgres-data.
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        
        - name: table-sql
          mountPath: /docker-entrypoint-initdb.d/init.sql  # Inside PostgreSQL container
          subPath: table.sql  # Ensures only this file is mounted

        resources:  # Resource requests and limits for the container.
          requests:
            memory: "64Mi"  # Minimum memory requested for the container.
            cpu: "100m"  # Minimum CPU requested for the container.
          limits:
            memory: "128Mi"  # Maximum memory the container can use.
            cpu: "200m"  # Maximum CPU the container can use.
            
        

      volumes:
      - name: app-code
        hostPath:
          path: ./kubeapp  # Replace with the actual path to your code
          type: Directory

      - name: postgres-data
        emptyDir: {}


      - name: table-sql
        configMap:
          name: postgres-init-sql



