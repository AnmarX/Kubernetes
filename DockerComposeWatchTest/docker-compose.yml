services:
  testwatch:
    container_name: Test_Docker_Watch
    # this volume is same as the develo watch, but using watch is better
    # volumes:
    #   - "../DockerComposeWatchTest:/app"
    build: .
    develop:
      watch:
      # can you use this  - action: sync+restart but it will restart the service every time just use --reload on the dockerfile
        - action: sync
          path: ../DockerComposeWatchTest
          target: /app
          # ignore:
          #   - node_modules/
        # - action: rebuild
        #   path: package.json

    #the below is only metadata
    expose:
      - 8000

    # no need to map the ports because i want the app to be only accessd through nginx
    # ports:
    #   - 8000:8000
    
    # no need to use the command below here i used it on the dockerfile
    # command: ["uvicorn","main:app","--host","0.0.0.0","--port", "8000","--reload"]

  nginxserver:
    image: nginx:latest
    container_name: ngnixserver
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
  

  db:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123123123
      - POSTGRES_DB=postgres
    # ports:
    #   - "5432:5432"
    # restart: unless-stopped
    # volumes:
    #   - ./CREATE_ALL_TABLE.sql:/docker-entrypoint-initdb.d/init.sql
    #   - ./pg_data:/var/lib/postgresql/data/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 120s
      timeout: 5s
      retries: 5

